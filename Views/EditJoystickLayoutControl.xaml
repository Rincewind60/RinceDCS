<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="RinceDCS.Views.EditJoystickLayoutControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RinceDCS.Views"
    xmlns:utils="using:RinceDCS.Views.Utilities"
    xmlns:models="using:RinceDCS.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.Resources>
        <utils:ModeConverter x:Key="ModeConverter"/>
        <utils:ButtonOnLayoutConverter x:Key="ButtonOnLayoutConverter"/>
        <utils:ButtonOnLayoutFontWeightConverter x:Key="ButtonOnLayoutFontWeightConverter"/>
        <utils:SelectedButtonBackgroundConverter x:Key="SelectedButtonBackgroundConverter"/>
        <utils:SelectedButtonBorderConverter x:Key="SelectedButtonBorderConverter"/>
        <utils:AlignmentConverter x:Key="AlignmentConverter"/>
        <utils:NullToFalseConverter x:Key="NullToFalseConverter"/>

        <Style x:Key="NonUsedStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
        </Style>
        <Style x:Key="UsedStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <SolidColorBrush x:Key="ButtonTextBrush" Color="{x:Bind ViewModel.Stick.FontColor, Mode=OneWay}"/>

        <Style x:Key="ButtonFont" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <ListView
            Grid.Column="0"
            Grid.Row="1"
            Name="JoystickButtons"
            ItemsSource="{x:Bind ViewModel.Stick.Buttons}"
            SelectedItem="{x:Bind ViewModel.CurrentButton, Mode=TwoWay}"
            PreviewKeyDown="JoystickButtons_PreviewKeyDown">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:GameJoystickButton">
                    <ListViewItem>
                        <TextBlock Text="{x:Bind ButtonLabel}" FontWeight="{x:Bind OnLayout, Mode=OneWay, Converter={StaticResource ButtonOnLayoutFontWeightConverter}}"/>
                    </ListViewItem>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <StackPanel
                Grid.Column="0"
                Grid.Row="0"
                Grid.ColumnSpan="2"
                Height="40"
                Orientation="Horizontal">
            <Button
                Name="Settings" 
                Content="Settings"
                Click="Settings_Click"
                Margin="2,0,2,0"/>
            <Button
                Name="EditImage" 
                Content="Select Image"
                Click="EditImage_Click"
                Margin="2,0,2,0"/>
            <Button
                Name="ExportImage"
                Content="Export"
                Click="ExportImage_Click"
                Margin="2,0,2,0"/>
            <Button
                Name="PrintImage"
                Content="Print"
                Click="PrintImage_Click"
                Margin="2,0,2,0"/>
            <Border
                BorderBrush="LightGray"
                BorderThickness="2"
                Width="1"
                Height="32"
                Margin="4,0,4,0"/>
            <Button 
                Name="Expand" 
                Click="Expand_Click" 
                Margin="2,0,2,0">
                <SymbolIcon Symbol="Add"/>
            </Button>
            <ComboBox
                Name="ScaleCombo"
                ItemsSource="{x:Bind ViewModel.ScaleHelper.Scales}" 
                SelectedIndex="{x:Bind ViewModel.ScaleHelper.CurrentScale, Mode=TwoWay}"
                SelectionChanged="ScaleCombo_SelectionChanged"
                VerticalAlignment="Center"
                Margin="2,0,2,0"/>
            <Button
                Name="Shrink" 
                Click="Shrink_Click" 
                Margin="2,0,2,0">
                <SymbolIcon Symbol="Remove"/>
            </Button>
            <Border
                BorderBrush="LightGray"
                BorderThickness="2"
                Width="1"
                Height="32"
                Margin="4,0,4,0"/>
            <TextBlock
                Text="Font:"
                VerticalAlignment="Center"
                Margin="2,0,2,0"/>
            <ComboBox
                Name="FontCombo"
                ItemsSource="{x:Bind ViewModel.FontNames}" 
                SelectedItem="{x:Bind ViewModel.Stick.Font, Mode=TwoWay}" 
                VerticalAlignment="Center"
                MinWidth="100"
                Margin="2,0,2,0">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="x:String">
                        <TextBlock Text="{x:Bind}" FontFamily="{x:Bind}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock 
                Text="Size:"
                VerticalAlignment="Center"
                Margin="2,0,2,0"/>
            <ComboBox
                Name="FontSizeCombo"
                ItemsSource="{x:Bind ViewModel.FontSizes}" 
                SelectedItem="{x:Bind ViewModel.Stick.FontSize, Mode=TwoWay}" 
                VerticalAlignment="Center"
                Margin="2,0,2,0">
            </ComboBox>
            <TextBlock
                Text="Color:"
                VerticalAlignment="Center"
                Margin="2,0,2,0"/>
            <Button Name="ColorButton" Width="32" Height="32">
                <Button.Flyout>
                    <Flyout x:Name="ColorPickerFlyout">
                        <StackPanel>
                            <TextBlock Text="Select color for Button labels"/>
                            <ColorPicker
                                Name="ColorPicker"
                                ColorSpectrumShape="Box"
                                IsColorSliderVisible="True"
                                IsColorPreviewVisible="True"
                                IsColorChannelTextInputVisible="False"
                                IsHexInputVisible="False"
                                IsMoreButtonVisible="False"
                                IsAlphaEnabled="False"
                                IsAlphaSliderVisible="False"
                                IsAlphaTextInputVisible="False"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button Name="ApplyColor" Content="Apply" Margin="2,0,2,0" Click="ApplyColor_Click"/>
                                <Button Name="CancelColor" Content="Cancel" Margin="2,0,2,0" TabIndex="1" Click="CancelColor_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>
            <Border
                BorderBrush="LightGray"
                BorderThickness="2"
                Width="1"
                Height="32"
                Margin="4,0,4,0"/>
            <ToggleButton
                Name="FloatLeft"
                Margin="2,0,2,0"
                IsChecked="{x:Bind ViewModel.CurrentButton.Alignment, Mode=TwoWay, Converter={StaticResource AlignmentConverter}, ConverterParameter=Left}"
                IsEnabled="{x:Bind ViewModel.CurrentButton, Mode=OneWay, Converter={StaticResource NullToFalseConverter}}"
                Command="{x:Bind ViewModel.AlignButtonLeftCommand}">
                <SymbolIcon Symbol="AlignLeft"/>
            </ToggleButton>
            <ToggleButton 
                Name="FloatCenter" 
                Margin="2,0,2,0"
                IsChecked="{x:Bind ViewModel.CurrentButton.Alignment, Mode=TwoWay, Converter={StaticResource AlignmentConverter}, ConverterParameter=Center}"
                IsEnabled="{x:Bind ViewModel.CurrentButton, Mode=OneWay, Converter={StaticResource NullToFalseConverter}}"
                Command="{x:Bind ViewModel.AlignButtonCenterCommand}">
                <SymbolIcon Symbol="AlignCenter"/>
            </ToggleButton>
            <ToggleButton 
                Name="FloatRight" 
                Margin="2,0,2,0"
                IsChecked="{x:Bind ViewModel.CurrentButton.Alignment, Mode=TwoWay, Converter={StaticResource AlignmentConverter}, ConverterParameter=Right}"
                IsEnabled="{x:Bind ViewModel.CurrentButton, Mode=OneWay, Converter={StaticResource NullToFalseConverter}}"
                Command="{x:Bind ViewModel.AlignButtonRightCommand}">
                <SymbolIcon Symbol="AlignRight"/>
            </ToggleButton>
            <TextBlock
                Text="X:"
                VerticalAlignment="Center"
                Margin="12,0,2,0"/>
            <TextBlock
                Text="{x:Bind ViewModel.CurrentButton.TopX, Mode=OneWay}"
                VerticalAlignment="Center"
                Width="40"
                Margin="2,0,2,0"/>
            <TextBlock
                Text="Y:"
                VerticalAlignment="Center"
                Margin="2,0,2,0"/>
            <TextBlock
                Text="{x:Bind ViewModel.CurrentButton.TopY, Mode=OneWay}"
                VerticalAlignment="Center"
                Width="40"
                Margin="2,0,2,0"/>
            <TextBlock
                Text="Width:"
                VerticalAlignment="Center"
                Margin="12,0,2,0"/>
            <TextBlock
                Text="{x:Bind ViewModel.CurrentButton.Width, Mode=OneWay}"
                VerticalAlignment="Center"
                Width="40"
                Margin="2,0,2,0"/>
            <TextBlock
                Text="Height:"
                VerticalAlignment="Center"
                Margin="2,0,2,0"/>
            <TextBlock
                Text="{x:Bind ViewModel.CurrentButton.Height, Mode=OneWay}"
                VerticalAlignment="Center"
                Width="40"
                Margin="2,0,2,0"/>
        </StackPanel>

        <ScrollViewer
            Grid.Row="1"
            Grid.Column="1"
            Name="JoystickScrollViewer"
            HorizontalScrollBarVisibility="Auto">
            <Grid Name="JoystickScaleGrid">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image
                    Grid.Row="0"
                    Grid.Column="0"
                    Name="JoystickImage"
                    Loaded="JoystickImage_Loaded"
                    PointerPressed="JoystickImage_PointerPressed"
                    PointerMoved="JoystickImage_PointerMoved"
                    PointerReleased="JoystickImage_PointerReleased"/>
                <ItemsControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Name="ButtonsItemsControl"
                    PreviewKeyDown="ButtonsItemsControl_PreviewKeyDown"
                    ItemsSource="{x:Bind ViewModel.Stick.Buttons}"
                    LayoutUpdated="ButtonsItemsControl_LayoutUpdated">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="models:GameJoystickButton">
                            <Border
                                Name="JoysticButton"
                                IsTabStop="True"
                                GotFocus="JoysticButton_GotFocus"
                                PointerPressed="JoysticButton_PointerPressed"
                                BorderThickness="2"
                                BorderBrush="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource SelectedButtonBorderConverter}}"
                                MinWidth="60"
                                MinHeight="24"
                                Visibility="{x:Bind OnLayout, Mode=OneWay, Converter={StaticResource ButtonOnLayoutConverter}}"
                                Width="{x:Bind Width, Mode=OneWay}"
                                Height="{x:Bind Height, Mode=OneWay}"
                                Background="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource SelectedButtonBackgroundConverter}}">
                                <Border.RenderTransform>
                                    <TranslateTransform
                                        X="{x:Bind TopX, Mode=OneWay}" 
                                        Y="{x:Bind TopY, Mode=OneWay}"/>
                                </Border.RenderTransform>
                                <TextBlock
                                    Text="{x:Bind ButtonLabel, Mode=OneWay}" 
                                    Style="{StaticResource ButtonFont}" 
                                    FontFamily="{x:Bind Font, Mode=OneWay}"
                                    FontSize="{x:Bind FontSize, Mode=OneWay}"
                                    TextAlignment="{x:Bind Alignment, Mode=OneWay}"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </ScrollViewer>
    </Grid>

</UserControl>
